{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../serverTs/controller/common/index.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict'\r\nconst Redis = require('ioredis');\r\nconst redis = new Redis();\r\nconst config = require('config-lite')(__dirname);\r\n\r\nimport { Request,Response,NextFunction } from 'express'\r\nimport { saveRedis,getRedis,fetch } from '../../common/utils'\r\nimport Wechat from '../wechat/index'\r\nimport { resolve } from 'path';\r\n\r\n// 从微信开放接口获取access_token\r\nfunction getWechatAccessToken() {\r\n    return new Promise((resolve,reject) => {\r\n        fetch({\r\n            method: \"get\",\r\n            url: `${config.wechat.prefix}/token?grant_type=client_credential&appid=${config.wechat.appID}&secret=${config.wechat.appSecret}`,\r\n        }).then((result:any) => {\r\n            var json:any;\r\n            \r\n            json = JSON.parse(result);\r\n            if (!json.access_token || json.errorcode) {\r\n                reject(json);\r\n                return;\r\n            }\r\n            json[\"timeStamp\"] = Date.now();\r\n            resolve(json);\r\n        }).catch((error) => {\r\n            reject(error)\r\n            throw new Error(error)\r\n        })\r\n    })\r\n}\r\n\r\n// access_token redis缓存处理\r\nexport function getAccessToken() {\r\n    return new Promise((resolve,reject) => {\r\n        getRedis(config.wechat.token)\r\n            .then((res) => {\r\n                resolve(res)\r\n            }).catch((error) => {\r\n                reject(error)\r\n                throw new Error(error)\r\n            })\r\n    }).then(res => new Promise((resolve,reject) => {\r\n        // redis有值那值 没值请求\r\n        if(res) {\r\n            resolve(res)\r\n        } else {\r\n            getWechatAccessToken().then((res:any) => {\r\n                saveRedis(config.wechat.token,res.access_token,7100)\r\n                    .then((success) => {\r\n                        resolve(res.access_token)\r\n                    }).catch((error:any) => {\r\n                        reject(error)\r\n                        throw new Error(error)\r\n                    })\r\n            }).catch((error) => {\r\n                reject(error)\r\n                throw new Error(error)\r\n            })\r\n        }\r\n    }))\r\n    .catch(error => {\r\n        throw new Error(error)\r\n    })\r\n}\r\n\r\n// 从微信开放接口 获取签名\r\nasync function getTicket() {\r\n    let access_token = await getAccessToken()\r\n    return fetch({\r\n        url:`${config.wechat.prefix}/ticket/getticket?access_token=${access_token}&type=jsapi`,\r\n        method:'get'\r\n    }).then((result) => {\r\n        return Promise.resolve(result)\r\n    }).catch((error) => {\r\n        return Promise.reject(error)\r\n    })\r\n}\r\n// 获取jsapi_ticket redis 缓存处理\r\nexport function getJSApiTicket() {\r\n    return new Promise((resolve,reject) =>{\r\n        getRedis('jsapiTicket')\r\n            .then((res) => {\r\n                resolve(res)\r\n            }).catch((error) => {\r\n                reject(error);\r\n                throw new Error(error)\r\n            })\r\n    }).then(res => new Promise((resolve,reject) => {\r\n        if(res) {\r\n            resolve(res)\r\n        } else {\r\n            getTicket().then((result:any) => {\r\n                var json:any;\r\n            \r\n                json = JSON.parse(result);\r\n                if (!json.ticket || json.errorcode) {\r\n                    reject(json);\r\n                    return;\r\n                }\r\n                saveRedis('jsapiTicket',json.ticket,7100)\r\n                    .then((success) => {\r\n                        resolve(json.ticket)\r\n                    }).catch((error:any) => {\r\n                        reject(error)\r\n                        throw new Error(error)\r\n                    })\r\n            }).catch((error) => {\r\n                reject(error)\r\n                throw new Error(error)\r\n            })\r\n        }\r\n    }))\r\n    .catch(error => {\r\n        throw new Error(error)\r\n    })\r\n}\r\n"]}