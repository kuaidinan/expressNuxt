{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../serverTs/controller/wechat/index.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport { Request,Response,NextFunction } from 'express';\r\nimport * as HttpRequest from \"request\";\r\nimport * as XmlParse from 'pixl-xml';\r\nimport { sign,fetch,saveRedis,getRedis,stringToObject,signJSDK } from '../../common/utils';\r\nimport { getAccessToken,getJSApiTicket } from '../common/index';\r\nimport { resolve } from 'path';\r\nimport Auth from '../../common/auth';\r\nimport Users from '../../models/wechat/user'\r\nconst config = require('config-lite')(__dirname);\r\nconst auth = new Auth()\r\n\r\nexport default class Wechat {\r\n    // 微信模板消息\r\n    async sign(req:Request,res:Response) {\r\n        sign(req,res)\r\n    }\r\n    // 微信模板消息各个事件\r\n    async signPost(req:any,res:Response) {\r\n        let reqXml = XmlParse.parse(req.body);\r\n        res.set(\"Content-Type\", \"text/xml\");\r\n        if(reqXml.Content === '1') {\r\n            let message =`<xml>\r\n                <ToUserName><![CDATA[${ reqXml.FromUserName}]]></ToUserName>\r\n                <FromUserName><![CDATA[${ reqXml.ToUserName}]]></FromUserName>\r\n                <CreateTime>${Date.now()}</CreateTime>\r\n                <MsgType><![CDATA[text]]></MsgType>\r\n                <Content><![CDATA[123]]></Content>\r\n            </xml>`\r\n            res.send(message)\r\n        } else if (reqXml.Content === '2') {\r\n            let message = \r\n            `<xml>\r\n            <ToUserName><![CDATA[${ reqXml.FromUserName}]]></ToUserName>\r\n            <FromUserName><![CDATA[${ reqXml.ToUserName}]]></FromUserName>\r\n            <CreateTime>${ Date.now()}</CreateTime>\r\n            <MsgType><![CDATA[news]]></MsgType>\r\n            <ArticleCount>1</ArticleCount>\r\n            <Articles>\r\n            <item>\r\n            <Title><![CDATA[${'标题'}]]></Title> \r\n            <Description><![CDATA[${'网络图片'}]]></Description>\r\n            <PicUrl><![CDATA[http://img.zcool.cn/community/0142135541fe180000019ae9b8cf86.jpg@1280w_1l_2o_100sh.png]]></PicUrl>\r\n            <Url><![CDATA[${'url'}]]></Url>\r\n            </item>\r\n            </Articles>\r\n            </xml>`\r\n            res.send(message)\r\n        }else {\r\n            res.send('')\r\n        }\r\n    }\r\n    // 获取微信菜单\r\n    public async getMenu(req:Request,res:Response) {\r\n        const token = await getAccessToken()\r\n        fetch({\r\n            method:'get',\r\n            url:`${config.wechat.prefix}/menu/get?access_token=${token}`\r\n        }).then((result:any) => {\r\n            res.send(result)\r\n            return Promise.resolve(result)\r\n        }).catch((error) => {\r\n            return Promise.reject(error)\r\n        })\r\n    }\r\n    // 创建微信菜单\r\n    public async createMenu() {\r\n        const token = await getAccessToken()\r\n        return fetch({\r\n            method:'post',\r\n            url:`${config.wechat.prefix}/menu/create?access_token=${token}`,\r\n            json:true,\r\n            body: config.wechatMenu\r\n        }).then((result) => {\r\n            return Promise.resolve(result)\r\n        }).catch((error) => {\r\n            return Promise.reject(error)\r\n        })\r\n    }\r\n    // 微信授权\r\n    public async requestAuth(req:Request,res:Response) {\r\n        // 微信回调接口\r\n        const redirectUrl = auth.requestUrl(config.domain + '/api/wechat/callBack')\r\n        res.redirect(redirectUrl)\r\n    }\r\n    // 微信授权回调接口\r\n    async callBack(req:Request,res:Response,next:NextFunction) {\r\n        console.log('req.query.code',req.query)\r\n        const wechat = new Wechat();\r\n        let authPageToken:any = await wechat.getAuthPageToken(req.query.code)\r\n        let updateAuthPageTokens:any = await wechat.updateAuthPageToken(stringToObject(authPageToken).refresh_token)\r\n        updateAuthPageTokens = stringToObject(updateAuthPageTokens)\r\n        // console.log('updateAuthPageTokens',updateAuthPageTokens)\r\n        let userinfo = await wechat.getUser(updateAuthPageTokens.access_token,updateAuthPageTokens.openid)\r\n        // console.log('userinfo',userinfo)\r\n        // 微信关注的逻辑处理\r\n        let userinfoObj = stringToObject(userinfo)\r\n        // access_token is invalid or not latest, 重新进入\r\n        if (userinfoObj.errcode === 40001) {\r\n            res.redirect('/');\r\n            return;\r\n        }\r\n        if (userinfoObj.openid) {\r\n            Users.findOne({\r\n                openid:userinfoObj.openid\r\n            }).then((result:any) => {\r\n                if(!result) {\r\n                    // 新用户\r\n                    Users.create(userinfoObj)\r\n                        .then((createResult) => {\r\n                            res.cookie('pingTeam',userinfoObj.openid,{\r\n                                expires:new Date(new Date().getTime() + 30 * 24 * 3600 * 1000)\r\n                            })\r\n                            res.redirect('/activity/pingteam')\r\n                        })\r\n                        .catch((err) => {\r\n                            throw new Error(err);\r\n                        })\r\n                } else {\r\n                    // 老用户\r\n                    res.cookie('pingTeam',userinfoObj.openid,{\r\n                        expires:new Date(new Date().getTime() + 30 * 24 * 3600 * 1000)\r\n                    })\r\n                    res.redirect('/activity/pingteam')\r\n                }\r\n            }).catch((err) => {\r\n                throw new Error(err);\r\n            })\r\n        }\r\n\r\n    }\r\n    // 获取openId和网页授权token\r\n    getAuthPageToken(code:string) {\r\n        return new Promise((resolve,reject) => {\r\n            fetch({\r\n                url:`${config.wechat.prefixApi}/sns/oauth2/access_token?appid=${config.wechat.appID}&secret=${config.wechat.appSecret}&code=${code}&grant_type=authorization_code`,\r\n                method:'get'\r\n            }).then((result) => {\r\n                resolve(result)\r\n            }).catch((error) => {\r\n                reject(error)\r\n            })\r\n        }) \r\n    }\r\n    // 刷新网页授权token\r\n    updateAuthPageToken(refreshToken:string) {\r\n        return new Promise((resolve,reject) => {\r\n            fetch({\r\n                url:`${config.wechat.prefixApi}/sns/oauth2/refresh_token?appid=${config.wechat.appID}&grant_type=refresh_token&refresh_token=${refreshToken}`,\r\n                method:'get'\r\n            }).then((result) => {\r\n                resolve(result)\r\n            }).catch((error) => {\r\n                reject(error)\r\n            })\r\n        })\r\n    }\r\n    // 获取用户信息\r\n    public async getUser(accessToken:string,openid:string) {\r\n        return fetch({\r\n            url:`${config.wechat.prefixApi}/sns/userinfo?access_token=${accessToken}&openid=${openid}&lang=zh_CN`,\r\n            method:'get'\r\n        }).then((result) => {\r\n            return Promise.resolve(result)\r\n        }).catch((error) => {\r\n            return Promise.reject(error)\r\n        })\r\n    }\r\n    // 获取JSSDK签名\r\n    async getSignature(req:Request,res:Response) {\r\n        let temp:any = {};\r\n        let url = req.body.href;\r\n        let ticket = await getJSApiTicket();\r\n        let noncestr = Math.random().toString(36).substr(2,15);\r\n        let timestamp = Math.floor(Date.now() / 1000);\r\n        temp = {\r\n            url,\r\n            jsapi_ticket:ticket,\r\n            noncestr,\r\n            timestamp\r\n        }\r\n        let jsapi_ticket = signJSDK(temp);\r\n\r\n        let result = {\r\n            timestamp,\r\n            noncestr,\r\n            jsapi_ticket\r\n        };\r\n\r\n        res.send(result)\r\n    }\r\n}\r\n\r\n/**\r\n * 创建菜单逻辑\r\n */\r\nexport async function startCreateMenu() {\r\n    const result = await new Wechat().createMenu()\r\n}"]}