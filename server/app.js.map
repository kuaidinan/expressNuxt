{"version":3,"file":"app.js","sourceRoot":"","sources":["../serverTs/app.ts"],"names":[],"mappings":";;AAAA,MAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAElC,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AAIrC,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC,CAAA;AAE9B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;AAEzC,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,WAAW,CAAA;AAC5C,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAA;AAErC,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;AAErB,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,CAAC;AAEjD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAW,EAAE,GAAY,EAAE,IAAiB,EAAE,EAAE;IAG7D,GAAG,CAAC,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;IAC/C,GAAG,CAAC,MAAM,CAAC,8BAA8B,EAAE,+CAA+C,CAAC,CAAC;IAC5F,GAAG,CAAC,MAAM,CAAC,8BAA8B,EAAE,6BAA6B,CAAC,CAAC;IACxE,GAAG,CAAC,MAAM,CAAC,kCAAkC,EAAE,MAAM,CAAC,CAAC;IACzD,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,OAAO,CAAC,CAAA;IACnC,GAAG,CAAC,MAAM,CAAC,cAAc,EAAE,0BAA0B,CAAC,CAAA;IACtD,GAAG,CAAC,MAAM,CAAC,YAAY,EAAE,0HAA0H,CAAC,CAAC;IACrJ,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,IAAI,SAAS,CAAC,CAAC,CAAC;QAC3B,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,IAAI,EAAE,CAAC;IACX,CAAC;AACF,CAAC,CAAC,CAAC;AACH,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,MAAU,EAAE,EAAE;IAChD,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAA;AACnC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAS,EAAE,EAAE;IACtB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;AACnB,CAAC,CAAC,CAAA;AAEF,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;AAGvB,0CAAoC;AAEpC,eAAM,CAAC,GAAG,CAAC,CAAC;AAGZ,IAAI,UAAU,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAA;AAC7C,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC,CAAA;AAGzD,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,CAAA;AAGjC,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;IACnB,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAA;IACjC,OAAO,CAAC,KAAK,EAAE,CAAA;AACjB,CAAC;AAGD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;AAMpB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA","sourcesContent":["const express = require('express')\r\nimport { Request,Response,NextFunction } from 'express'\r\nconst mongoose = require('mongoose');\r\nimport * as history from 'connect-history-api-fallback';\r\nimport * as path from 'path';\r\n// import * as Redis from 'ioredis';\r\nvar Redis = require('ioredis')\r\n// import Wechat,{ startCreateMenu } from './controller/wechat/index'\r\nconst { Nuxt, Builder } = require('nuxt')\r\n\r\nconst app = express();\r\nconst host = process.env.HOST || '127.0.0.1'\r\nconst port = process.env.PORT || 3000\r\n\r\napp.set('port', port)\r\n\r\nconst config = require('config-lite')(__dirname);\r\n\r\napp.all('*', (req:Request, res:Response, next:NextFunction) => {\r\n\t// const origin = req.headers.origin;\r\n\t// res.header(\"Access-Control-Allow-Origin\", req.headers.origin || '*');\r\n\tres.header(\"Access-Control-Allow-Origin\", '*');\r\n\tres.header(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization, X-Requested-With\");\r\n\tres.header(\"Access-Control-Allow-Methods\", \"PUT,POST,GET,DELETE,OPTIONS\");\r\n  \tres.header(\"Access-Control-Allow-Credentials\", 'true'); //可以带cookies\r\n\tres.header(\"X-Powered-By\", '3.2.1')\r\n\tres.header(\"Content-Type\", 'text/html; charset=utf-8')\r\n\tres.header('User-Agent', 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.65 Safari/537.36');\r\n\tif (req.method == 'OPTIONS') {\r\n\t  \tres.send(200);\r\n\t} else {\r\n\t    next();\r\n\t}\r\n});\r\nmongoose.connect(config.url).then((result:any) => {\r\n\tconsole.log('mongoose is connect')\r\n}).catch((error:any) => {\r\n\tconsole.log(error)\r\n})\r\n\r\nnew Redis(config.redis)\r\n\r\n// Import API Routes\r\nimport router from './routes/index';\r\n\r\nrouter(app);\r\n\r\n// Import and Set Nuxt.js options\r\nlet nuxtConfig = require('../nuxt.config.js')\r\nnuxtConfig.dev = !(process.env.NODE_ENV === 'production')\r\n\r\n// Init Nuxt.js\r\nconst nuxt = new Nuxt(nuxtConfig)\r\n\r\n// Build only in dev mode\r\nif (nuxtConfig.dev) {\r\n  const builder = new Builder(nuxt)\r\n  builder.build()\r\n}\r\n\r\n// Give nuxt middleware to express\r\napp.use(nuxt.render)\r\n// 自定义微信订单\r\n// startCreateMenu()\r\n\r\n// app.use('/static',express.static(path.join(__dirname,'..','public')))\r\n// app.use(history());\r\napp.listen(port, host)"]}